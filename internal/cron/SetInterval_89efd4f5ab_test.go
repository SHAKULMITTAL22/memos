// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package cron

import (
	"sync"
	"testing"
	"time"
)

type Cron struct {
	ticker   *time.Ticker
	interval time.Duration
	sync.Mutex
}

func (c *Cron) SetInterval(d time.Duration) {
	// update interval
	c.Lock()
	wasStarted := c.ticker != nil
	c.interval = d
	c.Unlock()

	// restart the ticker
	if wasStarted {
		c.Start()
	}
}

func (c *Cron) Start() {
	c.Lock()
	c.ticker = time.NewTicker(c.interval)
	c.Unlock()
}

// TestSetInterval_89efd4f5ab tests the SetInterval method
func TestSetInterval_89efd4f5ab(t *testing.T) {
	// Test case 1: Check if the interval is being set correctly
	c := &Cron{}
	interval := 2 * time.Second
	c.SetInterval(interval)
	if c.interval != interval {
		t.Errorf("SetInterval failed, expected interval %v, got %v", interval, c.interval)
	} else {
		t.Logf("Success: SetInterval correctly set the interval to %v", interval)
	}

	// Test case 2: Check if the ticker is restarted when it was already started
	c.Start()
	oldTicker := c.ticker
	c.SetInterval(3 * time.Second)
	if c.ticker == oldTicker {
		t.Errorf("SetInterval failed, ticker was not restarted")
	} else {
		t.Logf("Success: SetInterval correctly restarted the ticker")
	}
}
