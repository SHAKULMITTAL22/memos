// Test generated by RoostGPT for test math-go using AI Type Open AI and AI Model gpt-4

package cron

import (
	"sync"
	"testing"
	"time"
)

type Cron struct {
	ticker *time.Ticker
	sync.RWMutex
}

func TestHasStarted_091497507a(t *testing.T) {
	c := &Cron{}

	// Test case 1: When ticker is nil
	if c.HasStarted() {
		t.Error("Expected HasStarted() to return false, but got true")
	} else {
		t.Log("Test case 1: Passed")
	}

	// Test case 2: When ticker is not nil
	c.ticker = time.NewTicker(1 * time.Second)
	if !c.HasStarted() {
		t.Error("Expected HasStarted() to return true, but got false")
	} else {
		t.Log("Test case 2: Passed")
	}
}

func (c *Cron) HasStarted() bool {
	c.RLock()
	defer c.RUnlock()

	return c.ticker != nil
}
